[domain]
nt = 8000;                              int
nx_inner = 200;                         int
nz_inner = 100;                         int
nx_inner_boundary = 10;                 int, defines inner limits in which to compute kernels. Limits wavefield storage and computation burden.
nz_inner_boundary = 20;                 int, defines inner limits in which to compute kernels. Limits wavefield storage and computation burden.
dx = 1.249;                             float
dz = 1.249;                             float
dt = 0.00025;                           float

[boundary]
np_boundary = 10;      int
np_factor = 0.075;      float

[medium]; Default values for the simulated models if none are loaded
scalar_rho = 1500.0;    float
scalar_vp = 2000.0;     float
scalar_vs = 800.0;      float

[sources]
peak_frequency = 50.0;                  float
n_sources = 7;                          int
n_shots = 1;                            int
source_timeshift = 0.005;
delay_cycles_per_shot = 12; // over f
moment_angles = {90, 81, 41, 300, 147, 252, 327} ;
ix_sources = {25, 50, 75, 100, 125, 150, 175};
iz_sources = {10, 10, 10, 10, 10, 10, 10};
which_source_to_fire_in_which_shot = {{0, 1, 2, 3, 4, 5, 6}};

[receivers]
nr = 19; !!
ix_receivers = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190}; !!
iz_receivers = {90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90}; !!

[inversion]
snapshot_interval = 10; int, snapshots of forward wavefield to store.
