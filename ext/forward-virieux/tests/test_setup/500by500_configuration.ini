[domain]
nt = 16000;                              int
nx_inner = 500;                         int
nz_inner = 500;                         int
nx_inner_boundary = 50;                 int, defines inner limits in which to compute kernels. Limits wavefield storage and computation burden.
nz_inner_boundary = 50;                 int, defines inner limits in which to compute kernels. Limits wavefield storage and computation burden.
dx = 1.249;                             float
dz = 1.249;                             float
dt = 0.00025;                           float

[boundary]
np_boundary = 10;      int
np_factor = 0.075;      float

[medium]; Default values for the simulated models if none are loaded
scalar_rho = 1500.0;    float
scalar_vp = 2000.0;     float
scalar_vs = 800.0;      float

[sources]
peak_frequency = 50.0;                  float
n_sources = 4;                          int
n_shots = 1;                            int
source_timeshift = 0.005;
delay_cycles_per_shot = 40; // over f
moment_angles = {45, 45, 45, 45};
ix_sources = {10, 150, 350, 490};
iz_sources = {490, 490, 490, 490};
which_source_to_fire_in_which_shot = {{0, 1, 2, 3}}; Zero based indexing!

[receivers]
nr = 9;
ix_receivers = {50, 100, 150, 200, 250, 300, 350, 400, 450};
iz_receivers = {491,491,491,491,491,491,491,491,491};

[inversion]
snapshot_interval = 10; int, snapshots of forward wavefield to store.
